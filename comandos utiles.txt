mkdir +(el nombre de la carpeta) = crear carpetas desde consola
toush + (nombre de el archivo+la extencion) = crear un archivo vacio 
rm + (el nombre de lo que quieres borrar) = se borra todo
git add + (el nombre del archivo)= agregas y dejas esperando el archivo en staging
git commit -m(mensaje) = pasas el archivo del staging a el repositorio
git init (estando en la ruta del proyecto) =  inicia el repositorio
git estatus = para ver el estatus del proyecto
git rm --cached = para sacar un archivo del staging
cat (nombre del archivo) = para ver todo  lo que tiene un archivo
git log = para ver el historial de todos los commits (--stat con cambios espesificos)
git show (nombre del archivo) = los cambios en el commit
git diff (numeros raros) = los cambios con commits espesificos
git rest (numeros raros) = se devuelve al commit anterior (--hard todo --soft deja las cosas que estan en staging quietas)
git chekout (numeros raros o master) = puedo ver como es el archivo en su primer commit
git reset  head es para quitar los archivos de  staging para que no se envien al ultimo commit
git commit -am "mensaje" = un commit sin el git add solo para archivos con un add previamente
git branch = crea una nueva rama 
git merge = une dos ramas
git remote add origin (las url que da github) = unir con un repositorio remoto
git remote = para ver si tenemos un repossitorio remoto
git remote -v = ver el link del repositorio remoto
git pull origin master = para trar cosas del repositorio remoto
git pull origin master --allow-unrelated-historias = es para fucionar dos historias distintas
git push origin master = envia lo de master a el repo remoto
ssh-keygen -t rsa -b 4096 -c (el correo) = asi se crea una llave ssh
eval $(ssh-agent -s) = asi se evlua que este corriendo ssh
ssh-add ~/.ssh/id_rsa = le decimos a git que esa en mi llave privada
git remote set-url = para actalizar la tura del repo ahora con ssh
git log --all --graph --decorate --oneline = para ver el historial de los commits mas visual
alias (cualquier cosa) "el comando largo" = crea un alias para usar el comando mas facil
git tag -a (v0.1) -m (mensaje) numeros (raros) = crear un tag
git tag = ver los tags
git show-ref --tags = muestra el numero raro y el tag espesificos
git push --tags = le envia al repo remoto los tags
git tag -d (nombre del tag) = borrar tags
git push origin :refs/tags/(nombre del tag) = se borra en github
git show-branch --all = me muestra todas las amas con sus historias
